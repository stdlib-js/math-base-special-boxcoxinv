{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar exp = require( '@stdlib/math-base-special-exp' );\nvar log1p = require( '@stdlib/math-base-special-log1p' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\n\n\n// MAIN //\n\n/**\n* Computes the inverse of a one-parameter Box-Cox transformation.\n*\n* @param {number} y - input value\n* @param {number} lambda - power parameter\n* @returns {number} inverse of the Box-Cox transformation\n*\n* @example\n* var v = boxcoxinv( 1.0, 2.5 );\n* // returns ~1.6505\n*\n* @example\n* var v = boxcoxinv( 4.0, 2.5 );\n* // returns ~2.6095\n*\n* @example\n* var v = boxcoxinv( 10.0, 2.5 );\n* // returns ~3.6812\n*\n* @example\n* var v = boxcoxinv( 2.0, 0.0 );\n* // returns ~7.3891\n*\n* @example\n* var v = boxcoxinv( -1.0, 2.5 );\n* // returns NaN\n*\n* @example\n* var v = boxcoxinv( 0.0, -1.0 );\n* // returns 1.0\n*\n* @example\n* var v = boxcoxinv( 1.0, NaN );\n* // returns NaN\n*\n* @example\n* var v = boxcoxinv( NaN, 3.1 );\n* // returns NaN\n*/\nfunction boxcoxinv( y, lambda ) {\n\tif ( isnan( y ) || isnan( lambda ) ) {\n\t\treturn NaN;\n\t}\n\tif ( lambda === 0.0 ) {\n\t\treturn exp( y );\n\t}\n\treturn exp( log1p( lambda*y ) / lambda );\n}\n\n\n// EXPORTS //\n\nmodule.exports = boxcoxinv;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the inverse of a one-parameter Box-Cox transformation.\n*\n* @module @stdlib/math-base-special-boxcoxinv\n*\n* @example\n* var boxcoxinv = require( '@stdlib/math-base-special-boxcoxinv' );\n*\n* var v = boxcoxinv( 1.0, 2.5 );\n* // returns ~1.6505\n*\n* v = boxcoxinv( 4.0, 2.5 );\n* // returns ~2.6095\n*\n* v = boxcoxinv( 10.0, 2.5 );\n* // returns ~3.6812\n*\n* v = boxcoxinv( 2.0, 0.0 );\n* // returns ~7.3891\n*\n* v = boxcoxinv( -1.0, 2.5 );\n* // returns NaN\n*\n* v = boxcoxinv( 0.0, -1.0 );\n* // returns 1.0\n*\n* v = boxcoxinv( 1.0, NaN );\n* // returns NaN\n*\n* v = boxcoxinv( NaN, 3.1 );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAM,QAAS,+BAAgC,EAC/CC,EAAQ,QAAS,iCAAkC,EACnDC,EAAQ,QAAS,iCAAkC,EA4CvD,SAASC,EAAWC,EAAGC,EAAS,CAC/B,OAAKH,EAAOE,CAAE,GAAKF,EAAOG,CAAO,EACzB,IAGAL,EADHK,IAAW,EACHD,EAEDH,EAAOI,EAAOD,CAAE,EAAIC,CAFjB,CAGhB,CAKAN,EAAO,QAAUI,IC1BjB,IAAIG,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "exp", "log1p", "isnan", "boxcoxinv", "y", "lambda", "main"]
}
